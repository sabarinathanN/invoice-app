/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/preact";
exports.ids = ["vendor-chunks/preact"];
exports.modules = {

/***/ "(rsc)/./node_modules/preact/dist/preact.js":
/*!********************************************!*\
  !*** ./node_modules/preact/dist/preact.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("var n, l, u, t, i, o, r, f, e, c = {}, s = [], a = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i, p = Array.isArray;\nfunction v(n, l) {\n    for(var u in l)n[u] = l[u];\n    return n;\n}\nfunction h(n) {\n    var l = n.parentNode;\n    l && l.removeChild(n);\n}\nfunction y(l, u, t) {\n    var i, o, r, f = {};\n    for(r in u)\"key\" == r ? i = u[r] : \"ref\" == r ? o = u[r] : f[r] = u[r];\n    if (arguments.length > 2 && (f.children = arguments.length > 3 ? n.call(arguments, 2) : t), \"function\" == typeof l && null != l.defaultProps) for(r in l.defaultProps)void 0 === f[r] && (f[r] = l.defaultProps[r]);\n    return d(l, f, i, o, null);\n}\nfunction d(n, t, i, o, r) {\n    var f = {\n        type: n,\n        props: t,\n        key: i,\n        ref: o,\n        __k: null,\n        __: null,\n        __b: 0,\n        __e: null,\n        __d: void 0,\n        __c: null,\n        __h: null,\n        constructor: void 0,\n        __v: null == r ? ++u : r,\n        __i: -1\n    };\n    return null == r && null != l.vnode && l.vnode(f), f;\n}\nfunction _(n) {\n    return n.children;\n}\nfunction x(n, l) {\n    this.props = n, this.context = l;\n}\nfunction k(n, l) {\n    if (null == l) return n.__ ? k(n.__, n.__i + 1) : null;\n    for(var u; l < n.__k.length; l++)if (null != (u = n.__k[l]) && null != u.__e) return u.__e;\n    return \"function\" == typeof n.type ? k(n) : null;\n}\nfunction b(n) {\n    var l, u;\n    if (null != (n = n.__) && null != n.__c) {\n        for(n.__e = n.__c.base = null, l = 0; l < n.__k.length; l++)if (null != (u = n.__k[l]) && null != u.__e) {\n            n.__e = n.__c.base = u.__e;\n            break;\n        }\n        return b(n);\n    }\n}\nfunction g(n) {\n    (!n.__d && (n.__d = !0) && i.push(n) && !m.__r++ || o !== l.debounceRendering) && ((o = l.debounceRendering) || r)(m);\n}\nfunction m() {\n    var n, l, u, t, o, r, e, c, s;\n    for(i.sort(f); n = i.shift();)n.__d && (l = i.length, t = void 0, o = void 0, r = void 0, c = (e = (u = n).__v).__e, (s = u.__P) && (t = [], o = [], (r = v({}, e)).__v = e.__v + 1, T(s, r, e, u.__n, void 0 !== s.ownerSVGElement, null != e.__h ? [\n        c\n    ] : null, t, null == c ? k(e) : c, e.__h, o), r.__.__k[r.__i] = r, j(t, r, o), r.__e != c && b(r)), i.length > l && i.sort(f));\n    m.__r = 0;\n}\nfunction w(n, l, u, t, i, o, r, f, e, a, v) {\n    var h, y, x, b, g, m, w, S, A, D = 0, H = t && t.__k || s, I = H.length, j = I, z = l.length;\n    for(u.__k = [], h = 0; h < z; h++)null != (b = u.__k[h] = null == (b = l[h]) || \"boolean\" == typeof b || \"function\" == typeof b ? null : b.constructor == String || \"number\" == typeof b || \"bigint\" == typeof b ? d(null, b, null, null, b) : p(b) ? d(_, {\n        children: b\n    }, null, null, null) : b.__b > 0 ? d(b.type, b.props, b.key, b.ref ? b.ref : null, b.__v) : b) ? (b.__ = u, b.__b = u.__b + 1, b.__i = h, -1 === (S = C(b, H, w = h + D, j)) ? x = c : (x = H[S] || c, H[S] = void 0, j--), T(n, b, x, i, o, r, f, e, a, v), g = b.__e, (y = b.ref) && x.ref != y && (x.ref && L(x.ref, null, b), v.push(y, b.__c || g, b)), null == m && null != g && (m = g), (A = x === c || null === x.__v) ? -1 == S && D-- : S !== w && (S === w + 1 ? D++ : S > w ? j > z - w ? D += S - w : D-- : D = S < w && S == w - 1 ? S - w : 0), w = h + D, \"function\" == typeof b.type ? (S !== w || x.__k === b.__k ? e = P(b, e, n) : void 0 !== b.__d ? e = b.__d : g && (e = g.nextSibling), b.__d = void 0) : g && (e = S !== w || A ? $(n, g, e) : g.nextSibling), \"function\" == typeof u.type && (u.__d = e)) : (x = H[h]) && null == x.key && x.__e && (x.__e == e && (e = k(x), \"function\" == typeof u.type && (u.__d = e)), M(x, x, !1), H[h] = null);\n    for(u.__e = m, h = I; h--;)null != H[h] && (\"function\" == typeof u.type && null != H[h].__e && H[h].__e == e && (u.__d = H[h].__e.nextSibling), M(H[h], H[h]));\n}\nfunction P(n, l, u) {\n    for(var t, i = n.__k, o = 0; i && o < i.length; o++)(t = i[o]) && (t.__ = n, l = \"function\" == typeof t.type ? P(t, l, u) : $(u, t.__e, l));\n    return l;\n}\nfunction $(n, l, u) {\n    return l != u && n.insertBefore(l, u || null), l.nextSibling;\n}\nfunction C(n, l, u, t) {\n    var i = n.key, o = n.type, r = u - 1, f = u + 1, e = l[u];\n    if (null === e || e && i == e.key && o === e.type) return u;\n    if (t > (null != e ? 1 : 0)) for(; r >= 0 || f < l.length;){\n        if (r >= 0) {\n            if ((e = l[r]) && i == e.key && o === e.type) return r;\n            r--;\n        }\n        if (f < l.length) {\n            if ((e = l[f]) && i == e.key && o === e.type) return f;\n            f++;\n        }\n    }\n    return -1;\n}\nfunction S(n, l, u, t, i) {\n    var o;\n    for(o in u)\"children\" === o || \"key\" === o || o in l || D(n, o, null, u[o], t);\n    for(o in l)i && \"function\" != typeof l[o] || \"children\" === o || \"key\" === o || \"value\" === o || \"checked\" === o || u[o] === l[o] || D(n, o, l[o], u[o], t);\n}\nfunction A(n, l, u) {\n    \"-\" === l[0] ? n.setProperty(l, null == u ? \"\" : u) : n[l] = null == u ? \"\" : \"number\" != typeof u || a.test(l) ? u : u + \"px\";\n}\nfunction D(n, l, u, t, i) {\n    var o;\n    n: if (\"style\" === l) if (\"string\" == typeof u) n.style.cssText = u;\n    else {\n        if (\"string\" == typeof t && (n.style.cssText = t = \"\"), t) for(l in t)u && l in u || A(n.style, l, \"\");\n        if (u) for(l in u)t && u[l] === t[l] || A(n.style, l, u[l]);\n    }\n    else if (\"o\" === l[0] && \"n\" === l[1]) o = l !== (l = l.replace(/(PointerCapture)$|Capture$/, \"$1\")), l = l.toLowerCase() in n ? l.toLowerCase().slice(2) : l.slice(2), n.l || (n.l = {}), n.l[l + o] = u, u ? t ? u.u = t.u : (u.u = Date.now(), n.addEventListener(l, o ? I : H, o)) : n.removeEventListener(l, o ? I : H, o);\n    else if (\"dangerouslySetInnerHTML\" !== l) {\n        if (i) l = l.replace(/xlink(H|:h)/, \"h\").replace(/sName$/, \"s\");\n        else if (\"width\" !== l && \"height\" !== l && \"href\" !== l && \"list\" !== l && \"form\" !== l && \"tabIndex\" !== l && \"download\" !== l && \"rowSpan\" !== l && \"colSpan\" !== l && \"role\" !== l && l in n) try {\n            n[l] = null == u ? \"\" : u;\n            break n;\n        } catch (n) {}\n        \"function\" == typeof u || (null == u || !1 === u && \"-\" !== l[4] ? n.removeAttribute(l) : n.setAttribute(l, u));\n    }\n}\nfunction H(n) {\n    var u = this.l[n.type + !1];\n    if (n.t) {\n        if (n.t <= u.u) return;\n    } else n.t = Date.now();\n    return u(l.event ? l.event(n) : n);\n}\nfunction I(n) {\n    return this.l[n.type + !0](l.event ? l.event(n) : n);\n}\nfunction T(n, u, t, i, o, r, f, e, c, s) {\n    var a, h, y, d, k, b, g, m, P, $, C, S, A, D, H, I = u.type;\n    if (void 0 !== u.constructor) return null;\n    null != t.__h && (c = t.__h, e = u.__e = t.__e, u.__h = null, r = [\n        e\n    ]), (a = l.__b) && a(u);\n    n: if (\"function\" == typeof I) try {\n        if (m = u.props, P = (a = I.contextType) && i[a.__c], $ = a ? P ? P.props.value : a.__ : i, t.__c ? g = (h = u.__c = t.__c).__ = h.__E : (\"prototype\" in I && I.prototype.render ? u.__c = h = new I(m, $) : (u.__c = h = new x(m, $), h.constructor = I, h.render = N), P && P.sub(h), h.props = m, h.state || (h.state = {}), h.context = $, h.__n = i, y = h.__d = !0, h.__h = [], h._sb = []), null == h.__s && (h.__s = h.state), null != I.getDerivedStateFromProps && (h.__s == h.state && (h.__s = v({}, h.__s)), v(h.__s, I.getDerivedStateFromProps(m, h.__s))), d = h.props, k = h.state, h.__v = u, y) null == I.getDerivedStateFromProps && null != h.componentWillMount && h.componentWillMount(), null != h.componentDidMount && h.__h.push(h.componentDidMount);\n        else {\n            if (null == I.getDerivedStateFromProps && m !== d && null != h.componentWillReceiveProps && h.componentWillReceiveProps(m, $), !h.__e && (null != h.shouldComponentUpdate && !1 === h.shouldComponentUpdate(m, h.__s, $) || u.__v === t.__v)) {\n                for(u.__v !== t.__v && (h.props = m, h.state = h.__s, h.__d = !1), u.__e = t.__e, u.__k = t.__k, u.__k.forEach(function(n) {\n                    n && (n.__ = u);\n                }), C = 0; C < h._sb.length; C++)h.__h.push(h._sb[C]);\n                h._sb = [], h.__h.length && f.push(h);\n                break n;\n            }\n            null != h.componentWillUpdate && h.componentWillUpdate(m, h.__s, $), null != h.componentDidUpdate && h.__h.push(function() {\n                h.componentDidUpdate(d, k, b);\n            });\n        }\n        if (h.context = $, h.props = m, h.__P = n, h.__e = !1, S = l.__r, A = 0, \"prototype\" in I && I.prototype.render) {\n            for(h.state = h.__s, h.__d = !1, S && S(u), a = h.render(h.props, h.state, h.context), D = 0; D < h._sb.length; D++)h.__h.push(h._sb[D]);\n            h._sb = [];\n        } else do {\n            h.__d = !1, S && S(u), a = h.render(h.props, h.state, h.context), h.state = h.__s;\n        }while (h.__d && ++A < 25);\n        h.state = h.__s, null != h.getChildContext && (i = v(v({}, i), h.getChildContext())), y || null == h.getSnapshotBeforeUpdate || (b = h.getSnapshotBeforeUpdate(d, k)), w(n, p(H = null != a && a.type === _ && null == a.key ? a.props.children : a) ? H : [\n            H\n        ], u, t, i, o, r, f, e, c, s), h.base = u.__e, u.__h = null, h.__h.length && f.push(h), g && (h.__E = h.__ = null);\n    } catch (n) {\n        u.__v = null, c || null != r ? (u.__e = e, u.__h = !!c, r[r.indexOf(e)] = null) : (u.__e = t.__e, u.__k = t.__k), l.__e(n, u, t);\n    }\n    else null == r && u.__v === t.__v ? (u.__k = t.__k, u.__e = t.__e) : u.__e = z(t.__e, u, t, i, o, r, f, c, s);\n    (a = l.diffed) && a(u);\n}\nfunction j(n, u, t) {\n    u.__d = void 0;\n    for(var i = 0; i < t.length; i++)L(t[i], t[++i], t[++i]);\n    l.__c && l.__c(u, n), n.some(function(u) {\n        try {\n            n = u.__h, u.__h = [], n.some(function(n) {\n                n.call(u);\n            });\n        } catch (n) {\n            l.__e(n, u.__v);\n        }\n    });\n}\nfunction z(l, u, t, i, o, r, f, e, s) {\n    var a, v, y, d = t.props, _ = u.props, x = u.type, b = 0;\n    if (\"svg\" === x && (o = !0), null != r) {\n        for(; b < r.length; b++)if ((a = r[b]) && \"setAttribute\" in a == !!x && (x ? a.localName === x : 3 === a.nodeType)) {\n            l = a, r[b] = null;\n            break;\n        }\n    }\n    if (null == l) {\n        if (null === x) return document.createTextNode(_);\n        l = o ? document.createElementNS(\"http://www.w3.org/2000/svg\", x) : document.createElement(x, _.is && _), r = null, e = !1;\n    }\n    if (null === x) d === _ || e && l.data === _ || (l.data = _);\n    else {\n        if (r = r && n.call(l.childNodes), v = (d = t.props || c).dangerouslySetInnerHTML, y = _.dangerouslySetInnerHTML, !e) {\n            if (null != r) for(d = {}, b = 0; b < l.attributes.length; b++)d[l.attributes[b].name] = l.attributes[b].value;\n            (y || v) && (y && (v && y.__html == v.__html || y.__html === l.innerHTML) || (l.innerHTML = y && y.__html || \"\"));\n        }\n        if (S(l, _, d, o, e), y) u.__k = [];\n        else if (w(l, p(b = u.props.children) ? b : [\n            b\n        ], u, t, i, o && \"foreignObject\" !== x, r, f, r ? r[0] : t.__k && k(t, 0), e, s), null != r) for(b = r.length; b--;)null != r[b] && h(r[b]);\n        e || (\"value\" in _ && void 0 !== (b = _.value) && (b !== l.value || \"progress\" === x && !b || \"option\" === x && b !== d.value) && D(l, \"value\", b, d.value, !1), \"checked\" in _ && void 0 !== (b = _.checked) && b !== l.checked && D(l, \"checked\", b, d.checked, !1));\n    }\n    return l;\n}\nfunction L(n, u, t) {\n    try {\n        \"function\" == typeof n ? n(u) : n.current = u;\n    } catch (n) {\n        l.__e(n, t);\n    }\n}\nfunction M(n, u, t) {\n    var i, o;\n    if (l.unmount && l.unmount(n), (i = n.ref) && (i.current && i.current !== n.__e || L(i, null, u)), null != (i = n.__c)) {\n        if (i.componentWillUnmount) try {\n            i.componentWillUnmount();\n        } catch (n) {\n            l.__e(n, u);\n        }\n        i.base = i.__P = null, n.__c = void 0;\n    }\n    if (i = n.__k) for(o = 0; o < i.length; o++)i[o] && M(i[o], u, t || \"function\" != typeof n.type);\n    t || null == n.__e || h(n.__e), n.__ = n.__e = n.__d = void 0;\n}\nfunction N(n, l, u) {\n    return this.constructor(n, u);\n}\nfunction O(u, t, i) {\n    var o, r, f, e;\n    l.__ && l.__(u, t), r = (o = \"function\" == typeof i) ? null : i && i.__k || t.__k, f = [], e = [], T(t, u = (!o && i || t).__k = y(_, null, [\n        u\n    ]), r || c, c, void 0 !== t.ownerSVGElement, !o && i ? [\n        i\n    ] : r ? null : t.firstChild ? n.call(t.childNodes) : null, f, !o && i ? i : r ? r.__e : t.firstChild, o, e), j(f, u, e);\n}\nn = s.slice, l = {\n    __e: function(n, l, u, t) {\n        for(var i, o, r; l = l.__;)if ((i = l.__c) && !i.__) try {\n            if ((o = i.constructor) && null != o.getDerivedStateFromError && (i.setState(o.getDerivedStateFromError(n)), r = i.__d), null != i.componentDidCatch && (i.componentDidCatch(n, t || {}), r = i.__d), r) return i.__E = i;\n        } catch (l) {\n            n = l;\n        }\n        throw n;\n    }\n}, u = 0, t = function(n) {\n    return null != n && null == n.constructor;\n}, x.prototype.setState = function(n, l) {\n    var u;\n    u = null != this.__s && this.__s !== this.state ? this.__s : this.__s = v({}, this.state), \"function\" == typeof n && (n = n(v({}, u), this.props)), n && v(u, n), null != n && this.__v && (l && this._sb.push(l), g(this));\n}, x.prototype.forceUpdate = function(n) {\n    this.__v && (this.__e = !0, n && this.__h.push(n), g(this));\n}, x.prototype.render = _, i = [], r = \"function\" == typeof Promise ? Promise.prototype.then.bind(Promise.resolve()) : setTimeout, f = function(n, l) {\n    return n.__v.__b - l.__v.__b;\n}, m.__r = 0, e = 0, exports.Component = x, exports.Fragment = _, exports.cloneElement = function(l, u, t) {\n    var i, o, r, f, e = v({}, l.props);\n    for(r in l.type && l.type.defaultProps && (f = l.type.defaultProps), u)\"key\" == r ? i = u[r] : \"ref\" == r ? o = u[r] : e[r] = void 0 === u[r] && void 0 !== f ? f[r] : u[r];\n    return arguments.length > 2 && (e.children = arguments.length > 3 ? n.call(arguments, 2) : t), d(l.type, e, i || l.key, o || l.ref, null);\n}, exports.createContext = function(n, l) {\n    var u = {\n        __c: l = \"__cC\" + e++,\n        __: n,\n        Consumer: function(n, l) {\n            return n.children(l);\n        },\n        Provider: function(n) {\n            var u, t;\n            return this.getChildContext || (u = [], (t = {})[l] = this, this.getChildContext = function() {\n                return t;\n            }, this.shouldComponentUpdate = function(n) {\n                this.props.value !== n.value && u.some(function(n) {\n                    n.__e = !0, g(n);\n                });\n            }, this.sub = function(n) {\n                u.push(n);\n                var l = n.componentWillUnmount;\n                n.componentWillUnmount = function() {\n                    u.splice(u.indexOf(n), 1), l && l.call(n);\n                };\n            }), n.children;\n        }\n    };\n    return u.Provider.__ = u.Consumer.contextType = u;\n}, exports.createElement = y, exports.createRef = function() {\n    return {\n        current: null\n    };\n}, exports.h = y, exports.hydrate = function n(l, u) {\n    O(l, u, n);\n}, exports.isValidElement = t, exports.options = l, exports.render = O, exports.toChildArray = function n(l, u) {\n    return u = u || [], null == l || \"boolean\" == typeof l || (p(l) ? l.some(function(l) {\n        n(l, u);\n    }) : u.push(l)), u;\n}; //# sourceMappingURL=preact.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/preact/dist/preact.js\n");

/***/ })

};
;